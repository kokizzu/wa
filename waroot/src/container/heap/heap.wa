// Copyright (C) 2024 武汉凹语言科技有限公司
// SPDX-License-Identifier: MIT

import "sort"

type Interface :interface {
	sort.Interface
	Push(x: interface{})
	Pop() => interface{}
}

func Init(h: Interface) {

	n := h.Len()
	for i := n/2 - 1; i >= 0; i-- {
		down(h, i, n)
	}
}

func Push(h: Interface, x: interface{}) {
	h.Push(x)
	up(h, h.Len()-1)
}

func Pop(h: Interface) => interface{} {
	n := h.Len() - 1
	h.Swap(0, n)
	down(h, 0, n)
	return h.Pop()
}

func Remove(h: Interface, i: int) => interface{} {
	n := h.Len() - 1
	if n != i {
		h.Swap(i, n)
		down(h, i, n)
		up(h, i)
	}
	return h.Pop()
}

func up(h: Interface, j: int) {
	for {
		i := (j - 1) / 2
		if i == j || h.Less(i, j) {
			break
		}
		h.Swap(i, j)
		j = i
	}
}

func down(h: Interface, i, n: int) {
	for {
		j1 := 2*i + 1
		if j1 >= n {
			break
		}
		j := j1
		if j2 := j1 + 1; j2 < n && !h.Less(j1, j2) {
			j = j2
		}
		if h.Less(i, j) {
			break
		}
		h.Swap(i, j)
		i = j
	}
}
